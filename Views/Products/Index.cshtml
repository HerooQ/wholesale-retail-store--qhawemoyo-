@model IEnumerable<WholesaleRetailStore.Models.Product>
@using WholesaleRetailStore.Models
@using WholesaleRetailStore.Services

@{
    ViewData["Title"] = "Products Catalog";
    var pricingService = ViewBag.PricingService as PricingService;
}

<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>Products Catalog</h1>
            <div class="btn-group" role="group" aria-label="Pricing View">
                <input type="radio" class="btn-check" name="pricingView" id="retailView" autocomplete="off" checked>
                <label class="btn btn-outline-primary" for="retailView">Retail Prices</label>

                <input type="radio" class="btn-check" name="pricingView" id="wholesaleView" autocomplete="off">
                <label class="btn btn-outline-success" for="wholesaleView">Wholesale Prices</label>
            </div>
        </div>

        <div class="alert alert-info">
            <strong>How Pricing Works:</strong> Toggle between Retail and Wholesale views to see how pricing differs based on customer type.
            Wholesale customers receive automatic discounts according to our pricing rules.
        </div>
    </div>
</div>

<div class="row">
    @foreach (var product in Model)
    {
        var retailPrice = pricingService?.CalculatePrice(product, CustomerType.Retail) ?? product.BasePrice;
        var wholesalePrice = pricingService?.CalculatePrice(product, CustomerType.Wholesale) ?? product.BasePrice;
        var discount = retailPrice - wholesalePrice;
        var discountPercentage = retailPrice > 0 ? (discount / retailPrice) * 100 : 0;

        <div class="col-lg-4 col-md-6 mb-4">
            <div class="card h-100">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">@product.Name</h5>
                    <p class="card-text text-muted">@product.Description</p>

                    <div class="mt-auto">
                        <!-- Stock Status -->
                        <div class="mb-2">
                            @if (product.Stock > 10)
                            {
                                <span class="badge bg-success">In Stock (@product.Stock)</span>
                            }
                            else if (product.Stock > 0)
                            {
                                <span class="badge bg-warning">Low Stock (@product.Stock)</span>
                            }
                            else
                            {
                                <span class="badge bg-danger">Out of Stock</span>
                            }
                        </div>

                        <!-- Pricing Section -->
                        <div class="pricing-section">
                            <!-- Retail Price (shown by default) -->
                            <div class="retail-pricing">
                                <h6 class="text-primary mb-1">Retail Price</h6>
                                <p class="h4 text-primary mb-0">@retailPrice.ToString("C")</p>
                            </div>

                            <!-- Wholesale Price (hidden by default) -->
                            <div class="wholesale-pricing" style="display: none;">
                                <h6 class="text-success mb-1">Wholesale Price</h6>
                                <div class="d-flex align-items-center gap-2">
                                    <p class="h4 text-success mb-0">@wholesalePrice.ToString("C")</p>
                                    @if (discount > 0)
                                    {
                                        <span class="badge bg-success">
                                            Save @discount.ToString("C") (@discountPercentage.ToString("F0")% off)
                                        </span>
                                    }
                                </div>
                                <small class="text-muted">You save @discount.ToString("C") per unit</small>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        @if (product.Stock > 0)
                        {
                            <div class="mt-3 d-grid gap-2">
                                <a asp-controller="Pricing" asp-action="Quote" asp-route-customerId=""
                                   class="btn btn-outline-primary btn-sm">
                                    Get Quote
                                </a>
                            </div>
                        }
                        else
                        {
                            <div class="mt-3">
                                <button class="btn btn-secondary btn-sm" disabled>Out of Stock</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@if (!Model.Any())
{
    <div class="text-center mt-5">
        <div class="alert alert-warning">
            <h4>No Products Found</h4>
            <p>There are currently no products in the catalog.</p>
        </div>
    </div>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const retailView = document.getElementById('retailView');
            const wholesaleView = document.getElementById('wholesaleView');
            const retailSections = document.querySelectorAll('.retail-pricing');
            const wholesaleSections = document.querySelectorAll('.wholesale-pricing');

            function updatePricingView() {
                if (retailView.checked) {
                    retailSections.forEach(section => section.style.display = 'block');
                    wholesaleSections.forEach(section => section.style.display = 'none');
                } else {
                    retailSections.forEach(section => section.style.display = 'none');
                    wholesaleSections.forEach(section => section.style.display = 'block');
                }
            }

            retailView.addEventListener('change', updatePricingView);
            wholesaleView.addEventListener('change', updatePricingView);

            // Initial state
            updatePricingView();
        });
    </script>
}
