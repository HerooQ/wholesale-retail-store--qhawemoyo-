@model WholesaleRetailStore.Services.Quote

@{
    ViewData["Title"] = $"Quote for {Model.CustomerName}";
    var customer = ViewBag.Customer as WholesaleRetailStore.Models.Customer;
}

<h1>Quote Generated</h1>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">Quote Details</h5>
                <span class="badge @(customer?.CustomerType == WholesaleRetailStore.Models.CustomerType.Retail ? "bg-primary" : "bg-success")">
                    @Model.CustomerType Customer
                </span>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col-sm-6">
                        <strong>Customer:</strong> @Model.CustomerName
                    </div>
                    <div class="col-sm-6 text-end">
                        <strong>Generated:</strong> @Model.GeneratedAt.ToString("MMM dd, yyyy HH:mm")
                    </div>
                </div>

                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th class="text-center">Qty</th>
                                <th class="text-end">Base Price</th>
                                <th class="text-end">Discounted Price</th>
                                <th class="text-end">Discount</th>
                                <th class="text-end">Line Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Items)
                            {
                                <tr>
                                    <td>
                                        <strong>@item.ProductName</strong>
                                    </td>
                                    <td class="text-center">@item.Quantity</td>
                                    <td class="text-end">@item.BasePrice.ToString("C")</td>
                                    <td class="text-end">
                                        @if (item.DiscountedPrice != item.BasePrice)
                                        {
                                            <span class="text-success fw-bold">@item.DiscountedPrice.ToString("C")</span>
                                        }
                                        else
                                        {
                                            <span>@item.DiscountedPrice.ToString("C")</span>
                                        }
                                    </td>
                                    <td class="text-end">
                                        @if (item.DiscountAmount > 0)
                                        {
                                            <span class="text-success">-@item.DiscountAmount.ToString("C")</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td class="text-end fw-bold">@item.LineTotal.ToString("C")</td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <th colspan="5" class="text-end">Subtotal:</th>
                                <th class="text-end">@Model.Subtotal.ToString("C")</th>
                            </tr>
                            @if (Model.AdditionalDiscount > 0)
                            {
                                <tr>
                                    <th colspan="5" class="text-end">Additional Discount:</th>
                                    <th class="text-end text-success">-@Model.AdditionalDiscount.ToString("C")</th>
                                </tr>
                            }
                            <tr class="table-primary">
                                <th colspan="5" class="text-end">Total:</th>
                                <th class="text-end fw-bold">@Model.Total.ToString("C")</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>

                @if (Model.AdditionalDiscount > 0)
                {
                    <div class="alert alert-success mt-3">
                        <strong>Volume Discount Applied!</strong> Additional @((Model.AdditionalDiscount / Model.Subtotal) * 100).ToString("F1")% discount applied to order total.
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h6 class="card-title mb-0">Pricing Summary</h6>
            </div>
            <div class="card-body">
                @if (Model.CustomerType == WholesaleRetailStore.Models.CustomerType.Retail)
                {
                    <div class="alert alert-info">
                        <strong>Retail Pricing:</strong> Full base prices apply. No discounts.
                    </div>
                }
                else
                {
                    <div class="alert alert-success">
                        <strong>Wholesale Pricing:</strong> Automatic discounts applied based on pricing rules.
                    </div>

                    <h6>Discounts Applied:</h6>
                    <ul class="list-unstyled">
                        @foreach (var item in Model.Items.Where(i => i.DiscountAmount > 0))
                        {
                            <li>
                                <small>
                                    @item.ProductName: @((item.DiscountAmount / (item.BasePrice * item.Quantity)) * 100).ToString("F1")% off
                                    <span class="text-muted">(-@item.DiscountAmount.ToString("C"))</span>
                                </small>
                            </li>
                        }
                    </ul>

                    @if (Model.AdditionalDiscount > 0)
                    {
                        <div class="mt-2 p-2 bg-light rounded">
                            <small><strong>Volume Discount:</strong> @Model.AdditionalDiscount.ToString("C") off total order</small>
                        </div>
                    }
                }

                <hr>

                <div class="d-grid gap-2">
                    <form asp-controller="Orders" asp-action="CreateFromQuote" method="post">
                        @foreach (var item in Model.Items)
                        {
                            <input type="hidden" name="productQuantities[@item.ProductId]" value="@item.Quantity" />
                        }
                        <input type="hidden" name="customerId" value="@Model.CustomerId" />
                        <button type="submit" class="btn btn-success">Create Order</button>
                    </form>

                    <a asp-action="Quote" asp-route-customerId="@Model.CustomerId" class="btn btn-outline-primary">Generate New Quote</a>
                    <a asp-action="Quote" class="btn btn-outline-secondary">Back to Quote Form</a>
                </div>
            </div>
        </div>

        @if (Model.Items.Any(i => i.DiscountAmount > 0))
        {
            <div class="card mt-3">
                <div class="card-header">
                    <h6 class="card-title mb-0">Savings Breakdown</h6>
                </div>
                <div class="card-body">
                    <div class="mb-2">
                        <small class="text-muted">Total Base Price: @Model.Items.Sum(i => i.BasePrice * i.Quantity).ToString("C")</small>
                    </div>
                    <div class="mb-2">
                        <small class="text-muted">Total Discounts: -@Model.Items.Sum(i => i.DiscountAmount).ToString("C")</small>
                    </div>
                    @if (Model.AdditionalDiscount > 0)
                    {
                        <div class="mb-2">
                            <small class="text-muted">Volume Discount: -@Model.AdditionalDiscount.ToString("C")</small>
                        </div>
                    }
                    <hr>
                    <div>
                        <strong class="text-success">You Save: @((Model.Items.Sum(i => i.DiscountAmount) + Model.AdditionalDiscount)).ToString("C")</strong>
                    </div>
                    <div>
                        <small class="text-muted">
                            Savings: @((((Model.Items.Sum(i => i.DiscountAmount) + Model.AdditionalDiscount)) / Model.Items.Sum(i => i.BasePrice * i.Quantity)) * 100).ToString("F1")%
                        </small>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
