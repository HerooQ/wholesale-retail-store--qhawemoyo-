// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WholesaleRetailStore.Data;

#nullable disable

namespace WholesaleRetailStore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WholesaleRetailStore.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerType")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerType = 0,
                            Email = "john.smith@email.com",
                            Name = "John Smith"
                        },
                        new
                        {
                            Id = 2,
                            CustomerType = 0,
                            Email = "sarah.johnson@email.com",
                            Name = "Sarah Johnson"
                        },
                        new
                        {
                            Id = 3,
                            CustomerType = 1,
                            Email = "procurement@abcelectronics.com",
                            Name = "ABC Electronics Corp"
                        },
                        new
                        {
                            Id = 4,
                            CustomerType = 1,
                            Email = "orders@techwholesale.com",
                            Name = "Tech Wholesale Inc"
                        });
                });

            modelBuilder.Entity("WholesaleRetailStore.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WholesaleRetailStore.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("WholesaleRetailStore.Models.PricingRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal?>("MinimumOrderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerType", "IsActive");

                    b.ToTable("PricingRules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerType = 1,
                            Description = "Standard wholesale discount - 10% off",
                            DiscountPercentage = 10.0m,
                            IsActive = true
                        },
                        new
                        {
                            Id = 2,
                            CustomerType = 1,
                            Description = "Volume discount - 15% off for orders over $500",
                            DiscountPercentage = 15.0m,
                            IsActive = true,
                            MinimumOrderAmount = 500.0m
                        });
                });

            modelBuilder.Entity("WholesaleRetailStore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasePrice = 99.99m,
                            Description = "High-quality wireless headphones with noise cancellation",
                            Name = "Wireless Headphones",
                            Stock = 50
                        },
                        new
                        {
                            Id = 2,
                            BasePrice = 199.99m,
                            Description = "Fitness tracking smart watch with heart rate monitor",
                            Name = "Smart Watch",
                            Stock = 30
                        },
                        new
                        {
                            Id = 3,
                            BasePrice = 49.99m,
                            Description = "Adjustable aluminum laptop stand for ergonomic working",
                            Name = "Laptop Stand",
                            Stock = 75
                        },
                        new
                        {
                            Id = 4,
                            BasePrice = 12.99m,
                            Description = "Fast charging USB-C cable, 6ft length",
                            Name = "USB-C Cable",
                            Stock = 200
                        },
                        new
                        {
                            Id = 5,
                            BasePrice = 79.99m,
                            Description = "Portable Bluetooth speaker with 12-hour battery life",
                            Name = "Bluetooth Speaker",
                            Stock = 40
                        },
                        new
                        {
                            Id = 6,
                            BasePrice = 4.99m,
                            Description = "Privacy webcam cover slider for laptop security",
                            Name = "Webcam Cover",
                            Stock = 150
                        });
                });

            modelBuilder.Entity("WholesaleRetailStore.Models.Order", b =>
                {
                    b.HasOne("WholesaleRetailStore.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WholesaleRetailStore.Models.OrderItem", b =>
                {
                    b.HasOne("WholesaleRetailStore.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WholesaleRetailStore.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WholesaleRetailStore.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WholesaleRetailStore.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("WholesaleRetailStore.Models.Product", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
